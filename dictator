#! /usr/local/bin/python3

from subprocess import call
import random
import json
import shelve
import sys
from contextlib import closing
# setup

ch_len = 10

list = []
dictionary = {}
user_config = {'score': 0, 'level': 0}
word_base_len = 6


def update_user_config(score=None, level=None, words_seen=None):
    global user_config
    with closing(shelve.open('./data/user_shelf.db')) as s:
        if score:
            user_config['score'] = score
        if level:
            user_config['level'] = level
        if words_seen:
            user_config['words_seen'] = words_seen
        s['default_user'] = user_config


def word_for_level(word):
    global user_config
    user_level = user_config.get('level')
    return len(word) < (word_base_len + user_level) and \
        len(word) > user_config.get('level')


def init():
    global dictionary, list, ch_len, user_config
    global user_level, word_base_len
    dictionary = json.load(open('./assets/dictionary-lc.json', 'r'))
    with closing(shelve.open('./data/user_shelf.db')) as s:
        if (s.get('default_user')):
            user_config = s.get('default_user')

    word_list = open('./assets/wordlist.txt', 'r')
    for word in word_list:
        if word_for_level(word):
            list.append(str.strip(word))
    word_list.close()

    random.shuffle(list)
    list = list[0:ch_len]


def game_loop():
    global dictionary, list, ch_len, user_config
    index = 0
    score = 0

    while True:
        if (index >= len(list)):
            print('\033[5m Final Score: {}/{}\033[0m'
                  .format(score, ch_len))
            updated_score = user_config.get('score') + score
            updated_level = None
            if (updated_score != user_config.get('score') and
                    updated_score % 10 == 0):
                updated_level = user_config.get('level') + 1

            update_user_config(score=updated_score, level=updated_level)
            break

        cur_word = list[index]
        call(['say', cur_word])
        call(['say', dictionary[cur_word]])
        call(['say', cur_word])

        input_word = str.strip(str(input('Please type what you heard: ')))

        if(str.lower(input_word) == str.lower(cur_word)):
            print('\033[1;32m Well done! \033[0m')
            score += 1
        else:
            print('=========================================')
            print('Expected word:', cur_word)
            print('definition:', dictionary[cur_word])
            print('Entered word: ', input_word)
            print('\033[1;31;40m Try again!\033[0m')
            print('=========================================')

        index += 1


def main():
    init()
    game_loop()


if __name__ == '__main__':
    main()
